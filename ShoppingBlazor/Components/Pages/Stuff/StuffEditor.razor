@using System.Globalization
@using MudBlazor.Utilities
@using ShoppingBlazor.Infrastructure.Extensions
@using ShoppingBlazor.Services.Products
@using ShoppingBlazor.Services.Products.Dtos
@using ShoppingBlazor.Services.Products.Paginations
@inject IProductService ProductService
@rendermode InteractiveServer

<EditForm Model="Stuff" OnInvalidSubmit="Submit" @ref="_editorForm">
    <DataAnnotationsValidator />

    <MudGrid>
        <MudItem xs="12" md="6" lg="4">
            <MudTextField @bind-Value="Stuff.Name"
                          Label="نام کالا"
                          Variant="Variant.Outlined"
                          Typo="Typo.input"
                          Margin="Margin.Dense"
                          Required="true"
                          For="@(() => Stuff.Name)">
            </MudTextField>
        </MudItem>
        <MudItem xs="12" md="6" lg="4">
            <MudSelect Margin="Margin.Dense"
                       ToStringFunc="x => x?.Name"
                       Required="true"
                       @bind-value="Stuff.Category"
                       Variant="Variant.Outlined"
                       Label="دسته بندی"
                       Dense="true"
                       Placeholder="انتخاب دسته بندی"
                       For="@(() => Stuff.Category)">
                @foreach (var category in _categories)
                {
                    <MudSelectItem Value="@category">@category.Name</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12" md="6" lg="4">
            <MudSelect Margin="Margin.Dense"
                       ToStringFunc="x => x?.Name"
                       Required="true"
                       @bind-value="Stuff.Brand"
                       Variant="Variant.Outlined"
                       Label="برند"
                       Dense="true"
                       Placeholder="انتخاب برند"
                       For="@(() => Stuff.Brand)">
                @foreach (var brand in _brands)
                {
                    <MudSelectItem Value="@brand">@brand.Name</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12" md="6" lg="4">
            <MudTextField @bind-Value="Stuff.SupplierName"
                          Label="نام تأمین کننده"
                          Variant="Variant.Outlined"
                          Typo="Typo.input"
                          Margin="Margin.Dense"
                          Required="true"
                          For="@(() => Stuff.SupplierName)">
            </MudTextField>
        </MudItem>
        <MudItem xs="12" md="6" lg="4">
            <MudNumericField Margin="Margin.Dense"
                             @bind-Value="Stuff.Stock"
                             Label="موجودی"
                             Variant="Variant.Outlined"
                             For="@(() => Stuff.Stock)" />
        </MudItem>
        <MudItem xs="12" md="6" lg="4">
            <MudNumericField Margin="Margin.Dense"
                             @bind-Value="Stuff.Price"
                             Label="قیمت"
                             T="int"
                             Format="N0"
                             Immediate="true"
                             DebounceInterval="500"
                             HideSpinButtons="true"
                             Variant="Variant.Outlined"
                             Culture="@CultureInfo.GetCultureInfo("fa-ir")"
                             For="@(() => Stuff.Price)"
                             HelperText="@Stuff.Price.ToRial()" />
        </MudItem>
        <MudItem xs="12" md="6" lg="4">
            <MudTextField @bind-Value="Stuff.SupplierEmail"
                          Label="ایمیل تأمین کننده"
                          Variant="Variant.Outlined"
                          Typo="Typo.input"
                          Margin="Margin.Dense"
                          Required="true"
                          For="@(() => Stuff.SupplierEmail)">
            </MudTextField>
        </MudItem>
        <MudItem xs="12" md="3" lg="2">
            <MudDatePicker Margin="Margin.Dense"
                           Label="تاریخ شروع"
                           @bind-Date="Stuff.StartDate"
                           Variant="Variant.Outlined"
                           Culture="@DateTimeExtension.GetPersianCulture()"
                           TitleDateFormat="dddd, dd MMMM" />
        </MudItem>
        <MudItem xs="12" md="3" lg="2">
            <MudDatePicker Margin="Margin.Dense"
                           Label="تاریخ پایان"
                           @bind-Date="Stuff.EnDateTime"
                           Variant="Variant.Outlined"
                           Culture="@DateTimeExtension.GetPersianCulture()"
                           TitleDateFormat="dddd, dd MMMM" />
        </MudItem>
        <MudItem md="12" lg="4">
            <MudColorPicker Variant="Variant.Outlined"
                            PickerVariant="PickerVariant.Static"
                            ColorPickerView="ColorPickerView.Palette"
                            Palette="CustomPalette" />
        </MudItem>
    </MudGrid>

    <div class="col-lg-4">
        <label for="number" class="form-label mb-2 rounded-3">رنگ بندی محصول</label>
        <div class="order-md-1 d-flex gap-2">
            <button type="button" class="form-control btn btn-primary bi-plus-lg rounded-3 d-flex align-items-center justify-content-center aspect-ratio aspect-ratio-1x1 p-2"></button>
        </div>
    </div>
    <div class="col-lg-4">
        <div>
            <label for="photos" class="form-label">تصویر کالا</label>
            <InputFile @bind-value="Stuff!.Image" class="form-control mb-2 rounded-3" id="photos" multiple />
            <ValidationMessage For="@(() => Stuff!.Image)" />
        </div>
    </div>
    <div class="col-lg-4">
        <div>
            <label for="catalogs" class="form-label">کاتالوگ کالا</label>
            <InputFile @bind-value="Stuff!.Catalog" class="form-control mb-2 rounded-3" id="catalogs" multiple />
            <ValidationMessage For="@(() => Stuff!.Catalog)" />
        </div>
    </div>

    <div class="m-2 d-grid gap-2 d-md-flex">
        <MudButton ButtonType="ButtonType.Submit" OnClick="Submit"></MudButton>
    </div>

</EditForm>

@code {
    private EditForm _editorForm;

    public IEnumerable<MudColor> CustomPalette { get; set; } =
    [
        "#F44336", "#E91E63", "#9C27B0", "#673AB7", "#3F51B5",
    ];

    [Parameter]
    public required AddStuffRequest Stuff { get; set; } = new()
        {
            Name = string.Empty,
            Category = null,
            Brand = null,
            Stock = 0,
            Price = 0,
            Image = string.Empty,
            ColorOptions = []
        };

    private IList<CategoryDto> _categories = [];

    private IList<BrandDto> _brands = [];

    [Parameter] public EventCallback<AddStuffRequest> OnConfirm { get; set; }

    [Parameter] public EventCallback<AddStuffRequest> OnCancel { get; set; }

    private string _buttonType = "ثبت";

    protected override void OnInitialized()
    {
        _buttonType = Stuff.CategoryId > 0 ? "ویرایش" : "افزودن";

        _brands = ProductService.Brands(new BrandPagination()).Value.Results;

        _categories = ProductService.Categories(new CategoryPagination()).Value.Results;
    }

    public async Task Submit()
    {
        await OnConfirm.InvokeAsync(Stuff!);
    }

    public async Task Cancel()
    {
        await OnCancel.InvokeAsync();
    }
}