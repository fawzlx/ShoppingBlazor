@page "/stuff"
@using ShoppingBlazor.Infrastructure.Extensions
@using ShoppingBlazor.Services.Products
@using ShoppingBlazor.Services.Products.Dtos
@using ShoppingBlazor.Services.Products.Paginations
@using ShoppingBlazor.States
@inject IProductService ProductService
@inject AddStuffState AddStuffState
@inject RemoveStuffState RemoveStuffState
@inject EditStuffState EditStuffState
@rendermode InteractiveServer

<h3>کالاها</h3>

<div class="container-fluid gap-3 d-grid md-flex">
    <div class="row shadow rounded-4 d-grid d-md-flex">
        <div class="col m-2">
            <label class="text-nowrap">نام کالا</label>
            <input type="text" class="form-control mt-2 rounded-3" placeholder="نام کالا" aria-label="name">
        </div>
        <div class="col m-2">
            <label class="text-nowrap">نام برند</label>
            <input type="text" class="form-control mt-2 rounded-3" placeholder="نام برند" aria-label="name">
        </div>
        <div class="col m-2">
            <label class="text-nowrap">نام تأمین کننده</label>
            <input type="text" class="form-control mt-2 rounded-3" placeholder="نام تأمین کننده" aria-label="name">
        </div>
        <div class="col m-2">
            <label class="text-nowrap">دسته بندی</label>
            <div class="dropdown">
                <button class="rounded-3 mt-2 container-fluid btn btn-secondary dropdown-toggle text-end" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    انتخاب
                </button>
                <ul class="dropdown-menu dropdown-menu-lg-start rounded-3">
                    <li>
                        <a class="dropdown-item text-end" href="#">دسته بندی اول</a>
                    </li>
                    <li>
                        <a class="dropdown-item text-end" href="#">دسته بندی دوم</a>
                    </li>
                    <li>
                        <a class="dropdown-item text-end" href="#">دسته بندی سوم</a>
                    </li>
                </ul>
            </div>
        </div>

        <div class="m-2 d-grid gap-2 d-md-flex">
            <button type="button" class="btn btn-primary btn-sm rounded-3">جستجو</button>
            <button type="button" class="btn btn-secondary btn-sm rounded-3">نمایش همه</button>
        </div>
    </div>

    @if (Stuffs.Any())
    {
        <div class="row shadow rounded-4 table-responsive">
            <table class="table table-striped table-hover rounded-3 align-middle text-nowrap">
                <thead>
                <tr>
                    <th scope="col" class="col-1">شناسه</th>
                    <th scope="col">نام کالا</th>
                    <th scope="col">نام دسته بندی</th>
                    <th scope="col">نام برند</th>
                    <th scope="col">نام تأمین کننده</th>
                    <th scope="col">موجودی</th>
                    <th scope="col">قیمت</th>
                    <th scope="col">تاریخ شروع</th>
                    <th scope="col">تاریخ پایان</th>
                    <th scope="col" class="col-1">عملیات</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var stuff in Stuffs)
                {
                    <tr>
                        <td>@stuff.Id</td>
                        <td>@stuff.Name</td>
                        <td>@stuff.CategoryName</td>
                        <td>@stuff.BrandName</td>
                        <td>@stuff.SupplierName</td>
                        <td>@stuff.Stock</td>
                        <td>@stuff.Price.ToRial()</td>
                        <td>@stuff.StartDate.ToPersianDateTime()</td>
                        <td>@stuff.EnDateTime.ToPersianDateTime()</td>
                        <td class="d-flex gap-2">
                            <button class="rounded-3 btn btn-sm btn-warning bi bi-pencil-fill" @onclick="() => EditStuffState.SetStuff(stuff)"></button>
                            <button type="button" class="rounded-3 btn btn-sm btn-danger bi bi-trash-fill" data-bs-toggle="modal" data-bs-target="#confirmDelete" @onclick="() => RemoveStuffState.SetId(stuff)"></button>
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>
    }

    <div class="d-md-flex justify-content-between align-items-center">
        @if (Stuffs.Any())
        {
            <nav aria-label="Page navigation example" class="order-md-2">
                <ul class="pagination justify-content-start">
                    <li class="page-item">
                        <a class="page-link rounded-end-3" href="#" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="#">1</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="#">2</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" href="#">3</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link rounded-start-3" href="#" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        }

        <div class="order-md-1 d-flex gap-2">
            <button type="button" class="btn btn-primary bi-plus-lg rounded-circle d-flex align-items-center justify-content-center aspect-ratio aspect-ratio-1x1 p-3" @onclick="AddStuffState.Show"></button>
            <button type="button" class="btn btn-secondary bi bi-file-earmark-spreadsheet rounded-circle d-flex align-items-center justify-content-center aspect-ratio aspect-ratio-1x1 p-3"></button>
        </div>
    </div>
</div>

@if (AddStuffState.ShowDialog)
{
    <StuffAddDialog
        OnCancel="AddStuffState.Hide"
        OnAdd="Add">
    </StuffAddDialog>
}

@if (EditStuffState.ShowDialog)
{
    <StuffEdit
        Stuff="EditStuffState.Stuff"
        OnCancel="EditStuffState.Hide"
        OnEdit="Edit">
    </StuffEdit>
}

@if (RemoveStuffState.ShowDialog)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content rounded-4">
                <div class="modal-header">
                    <h5 class="modal-title mb-0">هشدار</h5>
                    <button type="button" class="btn-close float-start" @onclick="RemoveStuffState.Hide"></button>
                </div>
                <div class="modal-body">
                    آیا از حذف این کالا اطمینان دارید؟
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="RemoveStuffState.Hide">بستن</button>
                    <button type="button" class="btn btn-danger" @onclick="Remove">حذف</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    public IList<StuffDto> Stuffs { get; set; } = [];

    protected override void OnInitialized()
    {
        Stuffs = ProductService.Stuffs(new StuffPagination()).Value;
    }

    private void Add(AddStuffRequest request)
    {
        AddStuffState.Confirm(request);

        Stuffs = ProductService.Stuffs(new StuffPagination()).Value;
    }

    private void Edit(EditStuffRequest request)
    {
        EditStuffState.Confirm(request);

        Stuffs = ProductService.Stuffs(new StuffPagination()).Value;
    }

    private void Remove()
    {
        RemoveStuffState.Confirm();

        Stuffs = ProductService.Stuffs(new StuffPagination()).Value;
    }
}