@page "/stuff"
@using ShoppingBlazor.Extensions
@using ShoppingBlazor.Infrastructure.Extensions
@using ShoppingBlazor.Services.Products
@using ShoppingBlazor.Services.Products.Dtos
@using ShoppingBlazor.Services.Products.Paginations
@using ShoppingBlazor.States
@inject IProductService ProductService
@inject AddStuffState AddStuffState
@inject RemoveStuffState RemoveStuffState
@inject EditStuffState EditStuffState
@rendermode InteractiveServer

<PageTitle>Stuff</PageTitle>

<MudText Class="m-2" Typo="Typo.h5">کالاها</MudText>

<div class="container-fluid gap-3 d-grid md-flex">
    <MudGrid>
        <MudItem xs="12" lg="3" md="6">
            <MudTextField @bind-Value="StuffPagination.Name" Clearable="true" Label="نام کالا" Variant="Variant.Outlined" Typo="Typo.input" Margin="Margin.Dense"></MudTextField>
        </MudItem>
        <MudItem xs="12" lg="3" md="6">
            <MudTextField @bind-Value="StuffPagination.BrandName" Clearable="true" Label="نام برند" Variant="Variant.Outlined" Typo="Typo.input" Margin="Margin.Dense"></MudTextField>
        </MudItem>
        <MudItem xs="12" lg="3" md="6">
            <MudTextField @bind-Value="StuffPagination.SupplierName" Clearable="true" Label="نام تأمین کننده" Variant="Variant.Outlined" Typo="Typo.input" Margin="Margin.Dense"></MudTextField>
        </MudItem>
        <MudItem xs="12" lg="3" md="6">
            <MudSelect MultiSelection="true"
                       Margin="Margin.Dense"
                       SelectAll="true"
                       SelectAllText="انتخاب همه"
                       ToStringFunc="group => group.Name"
                       @bind-SelectedValues="StuffPagination.Categories"
                       Variant="Variant.Outlined"
                       Label="دسته بندی"
                       Dense="true"
                       Placeholder="انتخاب دسته بندی"
                       Clearable="true">
                @foreach (var category in _categories)
                {
                    <MudSelectItem Value="@category">@category.Name</MudSelectItem>
                }
            </MudSelect>
        </MudItem>
        <MudItem xs="12">
            <MudFab Color="Color.Primary" Size="Size.Small" StartIcon="@Icons.Material.Filled.Search" />
            <MudFab Size="Size.Small" StartIcon="@Icons.Material.Filled.SearchOff" Color="Color.Secondary" Label="نمایش همه" />
        </MudItem>
        <MudItem xs="12">
            <MudTable ServerData="ReloadStuffs"
                      Dense="true"
                      Hover="true"
                      Outlined="true"
                      Striped="true"
                      @ref="_stuffTable">
                <HeaderContent>
                    <MudTh><MudTableSortLabel SortLabel="Id" T="StuffDto">شناسه</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortLabel="Name" T="StuffDto">نام کالا</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortLabel="CategoryName" T="StuffDto">نام دسته بندی</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortLabel="BrandName" T="StuffDto">نام برند</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortLabel="SupplierName" T="StuffDto">نام تأمین کننده</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortLabel="Stock" T="StuffDto">موجودی</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortLabel="Price" T="StuffDto">قیمت</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortLabel="StartDate" T="StuffDto">تاریخ شروع</MudTableSortLabel></MudTh>
                    <MudTh><MudTableSortLabel SortLabel="EndDateTime" T="StuffDto">تاریخ پایان</MudTableSortLabel></MudTh>
                    <MudTh Class="text-center">عملیات</MudTh>
                </HeaderContent>
                <RowTemplate>
                    <MudTd DataLabel="Id">@context.Id</MudTd>
                    <MudTd DataLabel="Name">@context.Name</MudTd>
                    <MudTd DataLabel="CategoryName">@context.CategoryName</MudTd>
                    <MudTd DataLabel="BrandName">@context.BrandName</MudTd>
                    <MudTd DataLabel="SupplierName">@context.SupplierName</MudTd>
                    <MudTd DataLabel="Stock">@context.Stock</MudTd>
                    <MudTd DataLabel="Price">@context.Price.ToRial()</MudTd>
                    <MudTd DataLabel="StartDate">@context.StartDate.ToPersianDateTime()</MudTd>
                    <MudTd DataLabel="EndDateTime">@context.EndDateTime.ToPersianDateTime()</MudTd>
                    <MudTd DataLabel="عملیات" Class="text-center">
                        <MudButton Size="Size.Medium" StartIcon="@Icons.Material.Filled.Delete" @onclick="() => RemoveStuffState.Show(context)" Color="Color.Secondary"></MudButton>
                        <MudButton Size="Size.Medium" StartIcon="@Icons.Material.Filled.Edit" @onclick="() => EditStuffState.Show(context)" Color="Color.Tertiary"></MudButton>
                    </MudTd>
                </RowTemplate>
                <NoRecordsContent>
                    <MudText>کالایی یافت نشد</MudText>
                </NoRecordsContent>
                <LoadingContent>
                    <MudText>درحال بارگیری...</MudText>
                </LoadingContent>
                <PagerContent>
                    <MudTablePager PageSizeOptions="[10, 25, 50, 100]"
                                   RowsPerPageString="تعداد در صفحه:"
                                   InfoFormat="{first_item}-{last_item} از {all_items}"
                                   HorizontalAlignment="HorizontalAlignment.Center" />
                </PagerContent>
                <FooterContent>
                    <MudTFootRow>
                        <MudFab Size="Size.Small" Class="my-2 ms-2" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add" @onclick="AddStuffState.Show" />
                        <MudFab Size="Size.Small" Class="my-2" Color="Color.Secondary" StartIcon="@Icons.Material.Filled.DocumentScanner" />
                    </MudTFootRow>
                </FooterContent>
            </MudTable>
        </MudItem>
    </MudGrid>
</div>

@if (AddStuffState.ShowDialog)
{
    <StuffAddDialog OnCancel="AddStuffState.Hide"
                    OnAdd="Add">
    </StuffAddDialog>
}

@if (EditStuffState.ShowDialog)
{
    <StuffEdit Stuff="EditStuffState.Item"
               OnCancel="EditStuffState.Hide"
               OnEdit="Edit">
    </StuffEdit>
}

@if (RemoveStuffState.ShowDialog)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0,0,0,0.5);">
        <div class="modal-dialog">
            <div class="modal-content rounded-4">
                <div class="modal-header">
                    <h5 class="modal-title mb-0">هشدار</h5>
                    <button type="button" class="btn-close float-start" @onclick="RemoveStuffState.Hide"></button>
                </div>
                <div class="modal-body">
                    آیا از حذف این کالا اطمینان دارید؟
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="RemoveStuffState.Hide">بستن</button>
                    <button type="button" class="btn btn-danger" @onclick="Remove">حذف</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private MudTable<StuffDto> _stuffTable;

    private IList<CategoryDto> _categories { get; set; } = [];

    public required StuffPagination StuffPagination { get; set; } = new();

    protected override void OnInitialized()
    {
        var categoryResult = ProductService.Categories(new CategoryPagination()).Value;

        _categories = categoryResult.Results;
    }

    private async Task<TableData<StuffDto>> ReloadStuffs(TableState state, CancellationToken token)
    {
        StuffPagination.Set(state);

        var stuffs = ProductService.Stuffs(StuffPagination).Value;

        return new TableData<StuffDto>
            {
                TotalItems = stuffs.Total,
                Items = stuffs.Results
            };
    }

    private async Task Add(AddStuffRequest request)
    {
        AddStuffState.Confirm(request);

        await _stuffTable.ReloadServerData();
    }

    private async Task Edit(EditStuffRequest request)
    {
        EditStuffState.Confirm(request);

        await _stuffTable.ReloadServerData();
    }

    private async Task Remove()
    {
        RemoveStuffState.Confirm();

        await _stuffTable.ReloadServerData();
    }
}